name: Node.js CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]


permissions:
  contents: write

env:
  IMAGE_TAG: ${{github.sha}}


jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: setup Node.js
        uses: actions/setup-node@v6

      - name: run test
        run: |
          cd ./client
          find . -name "*.js" -exec node --check {} +

      - name: backend run test
        run: |
          cd ./api
          find . -name "*.js" -exec node --check {} +
           
  git-leaks:
     runs-on: ubuntu-latest
     needs: test
     steps: 
        - name: checkout code 
          uses: actions/checkout@v4
  
        - name: gitleaks download
          uses: gitleaks/gitleaks-action@v2
  
        - name: gitleakscan
          run: |
            gitleaks detect --source ./client --exit-code=1
            gitleaks detect --source ./api --exit-code=1
  Trivy:
    runs-on: ubuntu-latest
    needs: git-leaks
    steps: 
       - name: Checkout code
         uses: actions/checkout@v4

       - name: Run Trivy vulnerability scanner in fs mode
         uses: aquasecurity/trivy-action@0.28.0
         with:
            scan-type: 'fs'
            scan-ref: '.'
            format: table

  Docker-build:
    runs-on: ubuntu-latest
    needs: Trivy
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: /api
          file: ./api/Dockerfile
          push: true
          tags: |
            adityashanbhag29/backend:latest
            adityashanbhag29/backend:${{ env.IMAGE_TAG }}
    


  Docker-build_frntend:
    runs-on: ubuntu-latest
    needs: Docker-build
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: /client
          file: ./client/Dockerfile
          push: true
          tags: |
            adityashanbhag29/frontend:latest
            adityashanbhag29/frontend:${{ env.IMAGE_TAG }}



  Trivy_image:
    runs-on: ubuntu-latest
    needs: 
        - Docker-build_frntend
        - Docker-build
    steps:
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: adityashanbhag29/frontend:${{ env.IMAGE_TAG }}
          format: table
          exit-code: 1
          ignore-unfixed: true
          vuln-type: os,library


      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: adityashanbhag29/backend:${{ env.IMAGE_TAG }}
          format: table
          exit-code: 1
          ignore-unfixed: true
          vuln-type: os,library

  Update-K8s:
    needs: Trivy_image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install yq
        run: |
          curl -sL https://github.com/mikefarah/yq/releases/download/v4.44.3/yq_linux_amd64 -o yq
          chmod +x yq && sudo mv yq /usr/local/bin/yq

          # Update backend image
          yq -i '
            (.|select(.kind=="Deployment")
            | .spec.template.spec.containers[]
            | select(.name=="backend")
            | .image) = "adityashanbhag29/backend:" + env(IMAGE_TAG)
          ' k8s/backend.yaml

          # Update frontend image
          yq -i '
            (.| select(.kind=="Deployment")
            | .spec.template.spec.containers[]
            | select(.name=="frontend")
            | .image) = "adityashanbhag29/frontend:" + env(IMAGE_TAG)
          ' k8s/frontend.yaml


  
      - name: Commit and Push changes
        run: |
          git config user.name "ci" 
          git config user.email "ci-bot@users.noreply.github.com" 
          git add -A 
          git commit -m "cd commit $IMAGE_TAG" || echo "no change" 
          git push
